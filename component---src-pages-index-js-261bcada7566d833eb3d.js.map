{"version":3,"sources":["webpack://v4/./src/pages/index.js"],"names":["StyledMainContainer","styled","location","data","className","hero","edges","about","jobs","featured","projects","contact"],"mappings":"kIAMMA,EAAsBC,qBAAH,sEAAGA,CAAH,4BAsBzB,UAlBkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OAChB,gBAAC,KAAD,CAAQD,SAAUA,GAChB,gBAACF,EAAD,CAAqBI,UAAU,cAC7B,gBAAC,KAAD,CAAMD,KAAMA,EAAKE,KAAKC,QACtB,gBAAC,KAAD,CAAOH,KAAMA,EAAKI,MAAMD,QACxB,gBAAC,KAAD,CAAMH,KAAMA,EAAKK,KAAKF,QACtB,gBAAC,KAAD,CAAUH,KAAMA,EAAKM,SAASH,QAC9B,gBAAC,KAAD,CAAUH,KAAMA,EAAKO,SAASJ,QAC9B,gBAAC,KAAD,CAASH,KAAMA,EAAKQ,QAAQL","file":"component---src-pages-index-js-261bcada7566d833eb3d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport { Layout, Hero, About, Jobs, Featured, Projects, Contact } from '@components';\n\nconst StyledMainContainer = styled.main`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Projects data={data.projects.edges} />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 700, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n              }\n            }\n            tech\n            github\n            external,\n            ios,\n            android\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external,\n            ios,\n            android\n          }\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}